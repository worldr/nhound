# on:
#   release:
#     types: [published]
#     branches: [main]

on: workflow_dispatch

name: release-main

jobs:
    quality:
        runs-on: ubuntu-latest
        steps:
            - name: 'Check out'
              uses: actions/checkout@v3

            - name: Set up the environment
              uses: ./.github/workflows/setup-poetry-env

            - name: 'Install Task'
              uses: arduino/setup-task@v1
              with:
                  repo-token: ${{ secrets.GITHUB_TOKEN }}
                  version: 3.x

            - name: 'Run checks'
              uses: ./.github/workflows/run-checks

    matrix:
        runs-on: ubuntu-latest
        needs: quality
        strategy:
            matrix:
                python-version: ['3.9', '3.10', '3.11']

        steps:
            - uses: actions/checkout@v3

            - name: 'Setup Python version'
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}

            - name: 'Set up the environment'
              uses: ./.github/workflows/setup-poetry-env
              with:
                  python-version: ${{ matrix.python-version }}

            - name: 'Setup GnuPG'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y gnupg

            - name: 'Test with pytest-cov'
              run: |
                  mkdir -p ./artifacts
                  source .venv/bin/activate
                  pytest \
                    --slow \
                    --junitxml=./artifacts/pytest-${{ matrix.python-version }}.xml \
                    --cov-report=term-missing \
                    --cov=nhound \
                    --cov=tests \
                    tests/ \
                    | tee ./artifacts/pytest-${{ matrix.python-version }}.txt

    release:
        # https://github.com/relekang/python-semantic-release/issues/311
        needs: matrix
        runs-on: ubuntu-latest
        concurrency: release

        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
                  token: ${{ secrets.PAT }}
            - name: 'Python Semantic Release'
              uses: relekang/python-semantic-release@v7.33.3
              with:
                  github_token: ${{ secrets.GH_TOKEN }}

    publish:
        needs: release
        runs-on: ubuntu-latest
        concurrency: publish
        steps:
            - name: 'Check out'
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Set up the environment
              uses: ./.github/workflows/setup-poetry-env

            - name: 'Install Task'
              uses: arduino/setup-task@v1
              with:
                  repo-token: ${{ secrets.GH_TOKEN }}
                  version: 3.x

            - name: 'Get latest changes from release step'
              run: |
                  git pull

            - name: 'Poetry build package'
              run: |
                  source .venv/bin/activate
                  poetry build --verbose

            - name: 'Poetry publish to TEST PyPi'
              run: |
                  source .venv/bin/activate
                  poetry config repositories.test-pypi https://test.pypi.org/legacy/
                  poetry config pypi-token.test-pypi ${{ secrets.TEST_PYPI_API_TOKEN }}
                  poetry publish --verbose -r test-pypi

            - name: 'Poetry dry run publish to PyPi'
              run: |
                  source .venv/bin/activate
                  poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}
                  poetry publish --verbose --dry-run

            - name: 'Poetry publish to PyPi'
              run: |
                  source .venv/bin/activate
                  poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}
                  poetry publish --verbose
